{"version":3,"sources":["Demo/Charts/Nvd3Chart/MultiBarChart.js","Demo/Charts/Nvd3Chart/ChartTopTen.js","Demo/Dashboard/Default.js"],"names":["MultiBarChart","state","data","baixa","media","alta","critico","hostServices","HostServices","getGraphs","response","status","length","this","setState","list_vulne","severitylow","severityMedium","severityHigh","severityCritical","Math","min","i","push","title","cvss","values","key","color","type","datum","x","y","height","showValues","showXAxis","groupSpacing","React","Component","ChartTopTen","getTopTen","topTen","hostname","cvssTotal","tooltip","enabled","barColor","Dashboard","totalHosts","totalHostsVulne","totalVulne","notCorrectedVulne","severity","mediaCVSS","getCards","totalVulnerabilities","notCorrected","localStorage","clear","props","history","Row","Col","md","xl","Card","className","Body","style","paddingRight","paddingLeft","paddingBottom","sm","Header","Title","as"],"mappings":"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","file":"js/11.aeeb45eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport HostServices from '../../../services/hostsServices'\r\nimport NVD3Chart from 'react-nvd3';\r\n\r\n\r\nclass MultiBarChart extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            data: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let baixa = [],\r\n        media = [],\r\n        alta = [],\r\n        critico = [];\r\n\r\n        const hostServices = new HostServices();\r\n        \r\n        let response = await hostServices.getGraphs();\r\n\r\n        if ( response != false ) {\r\n\r\n            if ( response.status == 200 || response.status == 201 ){\r\n\r\n                if ( response.data.length === 0) {\r\n                    this.setState({data: []})\r\n                    return\r\n                }\r\n\r\n                let list_vulne = [ \r\n                    response.severitylow.length, \r\n                    response.severityMedium.length, \r\n                    response.severityHigh.length, \r\n                    response.severityCritical.length\r\n                ]\r\n    \r\n                let lengthMin = Math.min( ...list_vulne );\r\n    \r\n                for (let i = 0; i < response.severitylow.length; i++) {\r\n                    baixa.push({\r\n                        'x': response.severitylow[i].title,\r\n                        'y': response.severitylow[i].cvss\r\n                    });\r\n                }\r\n                \r\n                for (let i = 0; i < response.severityMedium.length; i++) {\r\n                    media.push({\r\n                        'x': response.severityMedium[i].title,\r\n                        'y': response.severityMedium[i].cvss\r\n                    });\r\n                }\r\n    \r\n                for (let i = 0; i < response.severityHigh.length; i++) {\r\n                    alta.push({\r\n                        'x': response.severityHigh[i].title,\r\n                        'y': response.severityHigh[i].cvss\r\n                    });\r\n                }\r\n    \r\n                for (let i = 0; i < response.severityCritical.length; i++) {\r\n                    critico.push({\r\n                        'x': response.severityCritical[i].title,\r\n                        'y': response.severityCritical[i].cvss\r\n                    });\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        this.setState({\r\n            data: [\r\n                {\r\n                    values: baixa,\r\n                    key: 'Baixa',\r\n                    color: '#1df7b6'\r\n                },\r\n                {\r\n                    values: media,\r\n                    key: 'Média',\r\n                    color: '#f1f504'\r\n                },\r\n                {\r\n                    values: alta,\r\n                    key: 'Alta',\r\n                    color: '#e9a11d',\r\n                },\r\n                {\r\n                    values: critico,\r\n                    key: 'Crítico',\r\n                    color: '#f71d1d',\r\n                }\r\n            ]\r\n        }) \r\n    }\r\n    \r\n    render() {\r\n        return <NVD3Chart type=\"multiBarChart\" datum={this.state.data} x=\"x\" y=\"y\" height={300} showValues=\"false\" showXAxis={false} groupSpacing={0.1} />\r\n    }\r\n}\r\n\r\nexport default MultiBarChart;","import React from 'react';\r\nimport NVD3Chart from 'react-nvd3';\r\nimport HostServices from '../../../services/hostsServices'\r\n\r\nclass ChartTopTen extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const hostServices = new HostServices();\r\n        \r\n        let response = await hostServices.getTopTen();\r\n        let topTen = [];\r\n\r\n        if ( response != false ) {\r\n\r\n            if ( response.status == 200 ||  response.status == 201) {\r\n                for (let i = 0; i < response.topTen.length; i++) {\r\n                    topTen.push({\r\n                        'x': response.topTen[i].hostname,\r\n                        'y': response.topTen[i].cvssTotal\r\n                    });\r\n                }\r\n            } \r\n        }\r\n\r\n        this.setState({\r\n            data: [\r\n                { values: topTen }\r\n            ]\r\n        }) \r\n    }\r\n    \r\n    render() {\r\n\r\n        const barColor = ['#1df7b6', '#a9b7d0', '#9e8dd4', '#25a9cb', '#04a9f5'];\r\n\r\n        return <NVD3Chart tooltip={{enabled: true}} type=\"discreteBarChart\" datum={this.state.data} x=\"label\" y=\"value\" barColor={barColor} height={300} showValues />\r\n    }\r\n}\r\n\r\nexport default ChartTopTen;","import React from 'react';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\n\r\nimport HostServices from '../../services/hostsServices'\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport MultiBarChart from \"../Charts/Nvd3Chart/MultiBarChart\";\r\nimport ChartTopTen from \"../../Demo/Charts/Nvd3Chart/ChartTopTen\"\r\n\r\nconst hostServices = new HostServices();\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            totalHosts: 0,\r\n            totalHostsVulne: 0,\r\n            totalVulne: 0,\r\n            notCorrectedVulne: 0,\r\n            severity: 'Não definida',\r\n            mediaCVSS: 0.0,\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            let response = await hostServices.getCards();\r\n            \r\n            if ( response != false ) {\r\n\r\n                if ( response.status == 200 ||  response.status == 201) {\r\n                    this.setState({\r\n                        totalHosts: response.totalHosts,\r\n                        totalHostsVulne: response.totalHostsVulne,\r\n                        totalVulne: response.totalVulnerabilities,\r\n                        notCorrectedVulne: response.notCorrected,\r\n                        severity: response.severity,\r\n                        mediaCVSS: response.mediaCVSS\r\n                    })\r\n                }\r\n\r\n                else if ( response.status == 401 ) {\r\n                    localStorage.clear(); \r\n                    this.props.history.push('/');\r\n                }\r\n                \r\n            } else {\r\n                localStorage.clear(); \r\n                this.props.history.push('/');\r\n            }\r\n        }\r\n        catch(error){\r\n            localStorage.clear(); \r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let totalHosts = this.state.totalHosts;\r\n        let totalHostsVulne = this.state.totalHostsVulne;\r\n        let totalVulne= this.state.totalVulne;\r\n        let notCorrectedVulne = this.state.notCorrectedVulne;\r\n        let severity = this.state.severity;\r\n        let mediaCVSS = this.state.mediaCVSS;\r\n\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col md={6} xl={4}>\r\n                        <Card className='card-event'>\r\n                            <Card.Body>\r\n                                <div className=\"row align-items-center justify-content-center\">\r\n                                    <div className=\"col\">\r\n                                        <h5 className=\"m-0\">Hosts</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='row align-items-center justify-content-center'>\r\n                                    <div className=\"col\">\r\n                                        <h2 className=\"mt-2 f-w-300\">{totalHosts}<sub className=\"text-muted f-14\">Total</sub></h2>\r\n                                        <h6 className=\"text-muted mt-3 mb-0\">Todos Hosts registrados</h6>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <h2 className=\"mt-2 f-w-300\">{totalHostsVulne}<sub className=\"text-muted f-14\">Vulneráveis</sub></h2>\r\n                                        <h6 className=\"text-muted mt-3 mb-0\">Hosts com vulnerabilidades</h6>\r\n                                        <i className=\"fa fa-exclamation-triangle text-c-yellow f-50\"/>\r\n                                    </div>\r\n                                </div>      \r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6} xl={4}>\r\n                        <Card className='card-event'>\r\n                            <Card.Body>\r\n                                <div className=\"row align-items-center justify-content-center\">\r\n                                    <div className=\"col\">\r\n                                        <h5 className=\"m-0\">Vulnerabilidades</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='row align-items-center justify-content-center'>\r\n                                    <div className=\"col\" style={{paddingRight: 0}}>\r\n                                        <h2 className=\"mt-2 f-w-300\">{totalVulne}<sub className=\"text-muted f-14\">Total</sub></h2>\r\n                                        <h6 className=\"text-muted mt-3 mb-0\">Vulnerabilidades detectadas</h6>\r\n                                    </div>\r\n                                    <div className=\"col\" style={{paddingLeft:0}}>\r\n                                        <h2 className=\"mt-2 f-w-300\">{notCorrectedVulne}<sub className=\"text-muted f-14\">Total</sub></h2>\r\n                                        <h6 className=\"text-muted mt-3 mb-0\">Vulnerabilidades não corrigidas</h6>\r\n                                        <i className=\"fa fa-exclamation-triangle text-c-yellow f-50\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4}>\r\n                        <Card className='card-event'>\r\n                            <Card.Body>\r\n                                <div className=\"row align-items-center justify-content-center\">\r\n                                    <div className=\"col\">\r\n                                        <h5 className=\"m-0\">Média</h5>\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                <label className=\"label theme-bg2 text-white f-14 f-w-400 float-right\">CVSS GERAL: {mediaCVSS}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <h2 className=\"mt-2 f-w-300\" style={{paddingBottom: 13.5}}>{severity}<sub className=\"text-muted f-14\"> para todos hosts</sub></h2>\r\n                                <i className=\"fa fa-exclamation-triangle text-c-yellow f-50\"/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Vulnerabilidade por severidade</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <MultiBarChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Hosts mais vulneráveis</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <ChartTopTen />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>       \r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;"],"sourceRoot":""}