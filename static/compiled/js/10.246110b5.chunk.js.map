{"version":3,"sources":["Demo/Authentication/SignUp/SignUp1.js"],"names":["SignUp1","state","username","password","email","error","msgError","handleRegister","bind","handleChange","e","preventDefault","this","undefined","setState","payload","api","post","status","props","history","push","pathname","input","target","value","className","type","onChange","placeholder","onClick","style","marginBottom","color","to","React","Component"],"mappings":"oPASMA,E,kDACF,aAAgB,IAAD,8BACX,gBACKC,MAAQ,CACTC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,OAAO,EACPC,SAAU,IAEd,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVT,E,oGAaME,G,0EACjBA,EAAEC,iBAE2B,KAAxBC,KAAKX,MAAMC,eAA2CW,IAAxBD,KAAKX,MAAMC,UAClB,KAAxBU,KAAKX,MAAME,eAA2CU,IAAxBD,KAAKX,MAAME,UACpB,KAArBS,KAAKX,MAAMG,YAAqCS,IAArBD,KAAKX,MAAMG,M,uBAEtCQ,KAAKE,SAAS,CACVT,OAAO,EACPC,SAAU,qC,iCAKdS,EAAU,CACVb,SAAUU,KAAKX,MAAMC,SACrBC,SAAUS,KAAKX,MAAME,SACrBC,MAAOQ,KAAKX,MAAMG,O,kBAIKY,IAAIC,KAAK,qBAAsBF,G,OAE9B,M,OAAXG,OACTN,KAAKE,SAAS,CACVT,OAAO,EACPC,SAAU,mDAIdM,KAAKE,SAAS,CACVT,OAAO,EACPC,SAAU,KAGdM,KAAKO,MAAMC,QAAQC,KAAK,CACpBC,SAAU,O,kDAKlBV,KAAKE,SAAS,CACVT,OAAO,EACPC,SAAU,kD,oJAKTiB,EAAOb,GAChBE,KAAKE,SAAL,eAAgBS,EAAQb,EAAEc,OAAOC,U,+BAKjC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,MACA,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACX,0BAAMA,UAAU,MAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,OAEpB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,sCAEjB,wBAAIA,UAAU,QAAd,WACA,yBAAKA,UAAU,oBACX,2BAAOC,KAAK,OAAQC,SAAUhB,KAAKH,aAAaD,KAAKI,KAAM,YACvDc,UAAU,eAAeG,YAAY,aAAUJ,MAAOb,KAAKX,MAAMC,YAEzE,yBAAKwB,UAAU,oBACX,2BAAOC,KAAK,QAAQC,SAAUhB,KAAKH,aAAaD,KAAKI,KAAM,SAAUa,MAAOb,KAAKX,MAAMG,MACnFsB,UAAU,eAAeG,YAAY,WAE7C,yBAAKH,UAAU,oBACX,2BAAOC,KAAK,WAAWC,SAAUhB,KAAKH,aAAaD,KAAKI,KAAM,YAC9Dc,UAAU,eAAeD,MAAOb,KAAKX,MAAME,SAAW0B,YAAY,WAGtE,4BAAQH,UAAU,gCAAgCI,QAASlB,KAAKL,gBAAhE,WAEEK,KAAKX,MAAMI,MACT,yBAAK0B,MAAO,CAACC,aAAc,GAAIC,MAAO,QAClC,8BAAOrB,KAAKX,MAAMK,WAEpB,8BAIN,uBAAGoB,UAAU,mBAAb,4BAAqD,kBAAC,IAAD,CAASQ,GAAG,kBAAZ,mB,GA5G/DC,IAAMC,WAsHbpC","file":"js/10.246110b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport './../../../assets/scss/style.scss';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\r\n// import axios from 'axios'\r\nimport api from '../../../services/api'\r\n\r\nclass SignUp1 extends React.Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            error: false,\r\n            msgError: \"\"\r\n        }\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        if ( this.state.username === '' || this.state.username === undefined || \r\n            this.state.password === '' || this.state.password === undefined ||\r\n            this.state.email === '' || this.state.email === undefined) {\r\n \r\n            this.setState({\r\n                error: true, \r\n                msgError: 'Campos não devem estar vazios' \r\n            })      \r\n            return \r\n        }\r\n\r\n        let payload = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            email: this.state.email\r\n        }\r\n\r\n        try {\r\n            const response = await api.post(\"users/user/create/\", payload);\r\n\r\n            if (response.status === 401) {\r\n                this.setState({ \r\n                    error: true, \r\n                    msgError: 'Cadastro não efetuado, verifique os campos' \r\n                });\r\n            \r\n            } else {   \r\n                this.setState({ \r\n                    error: false, \r\n                    msgError: '' \r\n                });\r\n                \r\n                this.props.history.push({\r\n                    pathname: '/',\r\n                });\r\n            }\r\n                      \r\n        } catch (err) {\r\n            this.setState({ \r\n                error: true, \r\n                msgError: 'Cadastro não efetuado, verifique os campos' \r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange(input, e){\r\n        this.setState({[input]: e.target.value})\r\n    } \r\n\r\n\r\n    render () {\r\n        return(\r\n            <Aux>\r\n                <Breadcrumb/>\r\n                <div className=\"auth-wrapper\">\r\n                    <div className=\"auth-content\">\r\n                        <div className=\"auth-bg\">\r\n                            <span className=\"r\"/>\r\n                            <span className=\"r s\"/>\r\n                            <span className=\"r s\"/>\r\n                            <span className=\"r\"/>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body text-center\">\r\n                                <div className=\"mb-4\">\r\n                                    <i className=\"feather icon-user-plus auth-icon\"/>\r\n                                </div>\r\n                                <h3 className=\"mb-4\">Sign up</h3>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input type=\"text\"  onChange={this.handleChange.bind(this, 'username')}\r\n                                        className=\"form-control\" placeholder=\"Usuário\" value={this.state.username} />\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input type=\"email\" onChange={this.handleChange.bind(this, 'email')} value={this.state.email} \r\n                                        className=\"form-control\" placeholder=\"Email\"/>\r\n                                </div>\r\n                                <div className=\"input-group mb-4\"> \r\n                                    <input type=\"password\" onChange={this.handleChange.bind(this, 'password')}\r\n                                    className=\"form-control\" value={this.state.password}  placeholder=\"senha\"/>\r\n                                </div>\r\n                    \r\n                                <button className=\"btn btn-primary shadow-2 mb-4\" onClick={this.handleRegister}>Sign up</button>\r\n\r\n                                { this.state.error ? \r\n                                    <div style={{marginBottom: 10, color: 'red'}}>\r\n                                        <span>{this.state.msgError}</span>\r\n                                    </div>\r\n                                    : <div></div>\r\n\r\n                                }  \r\n\r\n                                <p className=\"mb-0 text-muted\">Já possui uma conta ? <NavLink to=\"/auth/signin-1\">Login</NavLink></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp1;"],"sourceRoot":""}